{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\react-complete-guide\\\\3-basic-features-and-components\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport ExpensesFilter from './ExpensesFilter';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const [filteredYear, setFilteredYear] = useState(2021);\n\n  const filterChangeHandler = selectedYear => setFilteredYear(selectedYear);\n\n  items = items.filter(item => item.date.getFullYear() === filteredYear);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onChangeFilterYear: filterChangeHandler,\n      selected: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), items.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No expenses found in $\", filteredYear, \"`\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this), items.map(_ref2 => {\n      let {\n        id,\n        date,\n        title,\n        amount\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        date: date,\n        title: title,\n        amount: amount\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Expenses, \"v1kQ56i7mY8rluONt+CedcxiVYQ=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["D:/code/react-complete-guide/3-basic-features-and-components/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpensesFilter","Card","Expenses","items","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filter","item","date","getFullYear","length","map","id","title","amount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAGC,YAAY,IAAIF,eAAe,CAACE,YAAD,CAA3D;;AACAJ,EAAAA,KAAK,GAAGA,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,OAA4BP,YAAjD,CAAR;AAEA,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACC,QAAC,cAAD;AACC,MAAA,kBAAkB,EAAEE,mBADrB;AAEC,MAAA,QAAQ,EAAEF;AAFX;AAAA;AAAA;AAAA;AAAA,YADD,EAKED,KAAK,CAACS,MAAN,KAAiB,CAAjB,iBAAsB;AAAA,2CAA0BR,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YALxB,EAMED,KAAK,CAACU,GAAN,CAAU;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMJ,QAAAA,IAAN;AAAYK,QAAAA,KAAZ;AAAmBC,QAAAA;AAAnB,OAAD;AAAA,0BACV,QAAC,WAAD;AAAsB,QAAA,IAAI,EAAEN,IAA5B;AAAkC,QAAA,KAAK,EAAEK,KAAzC;AAAgD,QAAA,MAAM,EAAEC;AAAxD,SAAkBF,EAAlB;AAAA;AAAA;AAAA;AAAA,cADU;AAAA,KAAV,CANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAjBD;;GAAMZ,Q;;KAAAA,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = ({ items }) => {\r\n\tconst [filteredYear, setFilteredYear] = useState(2021);\r\n\tconst filterChangeHandler = selectedYear => setFilteredYear(selectedYear);\r\n\titems = items.filter(item => item.date.getFullYear() === filteredYear);\r\n\r\n\treturn (\r\n\t\t<Card className='expenses'>\r\n\t\t\t<ExpensesFilter\r\n\t\t\t\tonChangeFilterYear={filterChangeHandler}\r\n\t\t\t\tselected={filteredYear}\r\n\t\t\t/>\r\n\t\t\t{items.length === 0 && <p>No expenses found in ${filteredYear}`</p>}\r\n\t\t\t{items.map(({ id, date, title, amount }) => (\r\n\t\t\t\t<ExpenseItem key={id} date={date} title={title} amount={amount} />\r\n\t\t\t))}\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}